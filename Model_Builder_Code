# -*- coding: utf-8 -*-
# ---------------------------------------------------------------------------
# Google_Earth_Flooding.py
# Created on: 2019-07-08 10:06:49.00000
#   (generated by ArcGIS/ModelBuilder)
# Usage: Google_Earth_Flooding <Breaklines> <Depth__Max__dtm_20ft_tif> <WSE__Max__dtm_20ft_tif> <Inundation_Boundary__Max_Value_0_> <Output_KML_File> <Cell_Size_Height> <Cell_Size_Width> 
# Description: 
# ---------------------------------------------------------------------------

# Set the necessary product code
# import arcinfo


# Import arcpy module
import arcpy

# Script arguments
Breaklines = arcpy.GetParameterAsText(0)

Depth__Max__dtm_20ft_tif = arcpy.GetParameterAsText(1)

WSE__Max__dtm_20ft_tif = arcpy.GetParameterAsText(2)

Inundation_Boundary__Max_Value_0_ = arcpy.GetParameterAsText(3)

Output_KML_File = arcpy.GetParameterAsText(4)
if Output_KML_File == '#' or not Output_KML_File:
    Output_KML_File = "C:\\Users\\michael.link\\Documents\\ArcGIS\\Testttt.kmz" # provide a default value if unspecified

Cell_Size_Height = arcpy.GetParameterAsText(5)
if Cell_Size_Height == '#' or not Cell_Size_Height:
    Cell_Size_Height = "2000" # provide a default value if unspecified

Cell_Size_Width = arcpy.GetParameterAsText(6)
if Cell_Size_Width == '#' or not Cell_Size_Width:
    Cell_Size_Width = "2000" # provide a default value if unspecified

# Local variables:
Inundation_Boundary_Pre_Breach__2_ = Inundation_Boundary__Max_Value_0_
FishNetPolylineTMP_label = "in_memory\\FishNetPolylineTMP_label"
FishNetPolylineTMP = "in_memory\\FishNetPolylineTMP"
FishNetPolygonTMP = "in_memory\\FishNetPolygonTMP"
FishNetPolygonClipTMP = "in_memory\\FishNetPolygonClipTMP"
Geometry_Type = "ENVELOPE"
tmpMinimumBoundingGeometry = "in_memory\\tmpMinimumBoundingGeometry"
tmpFeatureToLine = "in_memory\\tmpFeatureToLine"
tmpMergedLines = "in_memory\\tmpMergedLines"
ExtendedLines = tmpMergedLines
Extend_Lines_Limit = "0 Feet"
Extend_to_Extensions = "true"
tmpNewPolygon = "in_memory\\tmpNewPolygon"
Output_Polygons__split_by_lines_ = "in_memory\\FishNetPolygonClipCutTMP"
FishNetPolygonClipCut_shp = Output_Polygons__split_by_lines_
FishNetPolygonClipCut_shp__2_ = FishNetPolygonClipCut_shp
FishNetPolygonClipCutTMP = FishNetPolygonClipCut_shp__2_
Zonal_WSE_Output_Text_IDTMP = "in_memory\\Zonal_WSE_Output_Text_IDTMP"
FishNetPolygonClipCut_Layer__2_ = Zonal_WSE_Output_Text_IDTMP
Zonal_Depth_Output_Text_IDTMP = "in_memory\\Zonal_Depth_Output_Text_IDTMP"
FishNetPolygonClipCut_Layer__5_ = Zonal_Depth_Output_Text_IDTMP
WSE_Met_tif = "C:\\Users\\michael.link\\Desktop\\RAS_Demonstration\\Fish_Net_Tool\\RAS_WSEL_Raster\\WSE_Met.tif"
Zonal_WSE_Met_Output_Text_IDTMP = "in_memory\\Zonal_WSE_Met_Output_Text_IDTMP"
FishNetPolygonClipCut_Layer__3_ = Zonal_WSE_Met_Output_Text_IDTMP
FishNetPolygonClipCut_Layer = "FishNetPolygonClipCutTMP_Lay"
FishNetPolygonClipCut_Layer__4_ = FishNetPolygonClipCut_Layer__3_
CopyToFeatureTMP = "%scratchGDB%\\CopyToFeatureTMP"
Fish_Net_3D_KML = "%scratchGDB%\\Fish_Net_3D_KML"
v_ScenarioName___2_ = Fish_Net_3D_KML
v_ScenarioName___3_ = v_ScenarioName___2_
v_ScenarioName___4_ = v_ScenarioName___3_
v_ScenarioName___6_ = v_ScenarioName___4_
Fish_Net_3D_KML__2_ = "Fish_Net_3D_KML"

# Process: Repair Geometry (2)
arcpy.RepairGeometry_management(Inundation_Boundary__Max_Value_0_, "DELETE_NULL")

# Process: Create Fishnet
arcpy.CreateFishnet_management(FishNetPolylineTMP, "1967742.647 289968.289", "1967742.647 289978.289", Cell_Size_Width, Cell_Size_Height, "", "", "2084384.535 368459.097000003", "LABELS", Inundation_Boundary_Pre_Breach__2_, "POLYLINE")

# Process: Feature To Polygon
arcpy.FeatureToPolygon_management("in_memory\\FishNetPolylineTMP", FishNetPolygonTMP, "", "ATTRIBUTES", "")

# Process: Clip
arcpy.Clip_analysis(FishNetPolygonTMP, Inundation_Boundary__Max_Value_0_, FishNetPolygonClipTMP, "")

# Process: Minimum Bounding Geometry
arcpy.MinimumBoundingGeometry_management(FishNetPolygonClipTMP, tmpMinimumBoundingGeometry, Geometry_Type, "NONE", "", "NO_MBG_FIELDS")

# Process: Feature To Line
arcpy.FeatureToLine_management("in_memory\\tmpMinimumBoundingGeometry", tmpFeatureToLine, "", "NO_ATTRIBUTES")

# Process: Merge
arcpy.Merge_management("in_memory\\tmpFeatureToLine;''", tmpMergedLines, "")

# Process: Extend Line
arcpy.ExtendLine_edit(tmpMergedLines, Extend_Lines_Limit, Extend_to_Extensions)

# Process: Feature To Polygon (2)
arcpy.FeatureToPolygon_management("in_memory\\tmpMergedLines", tmpNewPolygon, "", "ATTRIBUTES", "")

# Process: Identity
arcpy.Identity_analysis(FishNetPolygonClipTMP, tmpNewPolygon, Output_Polygons__split_by_lines_, "NO_FID", "", "NO_RELATIONSHIPS")

# Process: Repair Geometry
arcpy.RepairGeometry_management(Output_Polygons__split_by_lines_, "DELETE_NULL")

# Process: Add Field (3)
arcpy.AddField_management(FishNetPolygonClipCut_shp, "TEXT_ID", "TEXT", "", "", "", "", "NULLABLE", "NON_REQUIRED", "")

# Process: Calculate Field (3)
arcpy.CalculateField_management(FishNetPolygonClipCut_shp__2_, "TEXT_ID", "[OID]", "VB", "")

# Process: Zonal Statistics as Table (2)
arcpy.gp.ZonalStatisticsAsTable_sa(FishNetPolygonClipCutTMP, "TEXT_ID", WSE__Max__dtm_20ft_tif, Zonal_WSE_Output_Text_IDTMP, "DATA", "MEAN")

# Process: Zonal Statistics as Table (3)
arcpy.gp.ZonalStatisticsAsTable_sa(FishNetPolygonClipCutTMP, "TEXT_ID", Depth__Max__dtm_20ft_tif, Zonal_Depth_Output_Text_IDTMP, "DATA", "MEAN")

# Process: Raster Calculator
arcpy.gp.RasterCalculator_sa("\"%WSE (Max).dtm_20ft.tif%\"/3.28084", WSE_Met_tif)

# Process: Zonal Statistics as Table (4)
arcpy.gp.ZonalStatisticsAsTable_sa(FishNetPolygonClipCutTMP, "TEXT_ID", WSE_Met_tif, Zonal_WSE_Met_Output_Text_IDTMP, "DATA", "MEAN")

# Process: Make Feature Layer
arcpy.MakeFeatureLayer_management(FishNetPolygonClipCutTMP, FishNetPolygonClipCut_Layer, "", "", "Shape_length Shape_length VISIBLE NONE;Shape_area Shape_area VISIBLE NONE;Shape_length_1 Shape_length_1 VISIBLE NONE;Shape_area_1 Shape_area_1 VISIBLE NONE;Shape_length_12 Shape_length_12 VISIBLE NONE;Shape_area_12 Shape_area_12 VISIBLE NONE;Shape_length Shape_length VISIBLE NONE;Shape_area Shape_area VISIBLE NONE;TEXT_ID TEXT_ID VISIBLE NONE")

# Process: Add Join (2)
arcpy.AddJoin_management(FishNetPolygonClipCut_Layer, "TEXT_ID", Zonal_WSE_Output_Text_IDTMP, "TEXT_ID", "KEEP_ALL")

# Process: Add Join (3)
arcpy.AddJoin_management(FishNetPolygonClipCut_Layer, "TEXT_ID", Zonal_Depth_Output_Text_IDTMP, "TEXT_ID", "KEEP_ALL")

# Process: Add Join (4)
arcpy.AddJoin_management(FishNetPolygonClipCut_Layer, "TEXT_ID", Zonal_WSE_Met_Output_Text_IDTMP, "TEXT_ID", "KEEP_ALL")

# Process: Repair Geometry (3)
arcpy.RepairGeometry_management(FishNetPolygonClipCut_Layer__3_, "DELETE_NULL")

# Process: Copy Features (3)
arcpy.CopyFeatures_management(FishNetPolygonClipCut_Layer__4_, CopyToFeatureTMP, "", "0", "0", "0")

# Process: Feature To 3D By Attribute (2)
arcpy.FeatureTo3DByAttribute_3d(CopyToFeatureTMP, Fish_Net_3D_KML, "Zonal_WSE_Met_Output_Text_IDTMP_MEAN", "")

# Process: Alter Field (3)
arcpy.AlterField_management(Fish_Net_3D_KML, "Zonal_WSE_Output_Text_IDTMP_MEAN", "WSEL_Feet", "WSEL_Feet", "", "8", "NON_NULLABLE", "false")

# Process: Alter Field (2)
arcpy.AlterField_management(v_ScenarioName___2_, "Zonal_Depth_Output_Text_IDTMP_MEAN", "Depth_Feet", "Depth_Feet", "", "8", "NON_NULLABLE", "false")

# Process: Alter Field
arcpy.AlterField_management(v_ScenarioName___3_, "Zonal_WSE_Met_Output_Text_IDTMP_MEAN", "WSEL_Meters", "WSEL_Meters", "", "8", "NON_NULLABLE", "false")

# Process: Delete Field
arcpy.DeleteField_management(v_ScenarioName___4_, "FishNetPolygonClipCutTMP_TEXT_ID;Zonal_WSE_Output_Text_IDTMP_OBJECTID;Zonal_WSE_Output_Text_IDTMP_TEXT_ID;Zonal_WSE_Output_Text_IDTMP_ZONE_CODE;Zonal_WSE_Output_Text_IDTMP_COUNT;Zonal_WSE_Output_Text_IDTMP_AREA;Zonal_Depth_Output_Text_IDTMP_OBJECTID;Zonal_Depth_Output_Text_IDTMP_TEXT_ID;Zonal_Depth_Output_Text_IDTMP_ZONE_CODE;Zonal_Depth_Output_Text_IDTMP_COUNT;Zonal_Depth_Output_Text_IDTMP_AREA;Zonal_WSE_Met_Output_Text_IDTMP_OBJECTID;Zonal_WSE_Met_Output_Text_IDTMP_TEXT_ID;Zonal_WSE_Met_Output_Text_IDTMP_ZONE_CODE;Zonal_WSE_Met_Output_Text_IDTMP_COUNT;Zonal_WSE_Met_Output_Text_IDTMP_AREA")

# Process: Make Feature Layer (2)
arcpy.MakeFeatureLayer_management(Fish_Net_3D_KML, Fish_Net_3D_KML__2_, "", "", "")

# Process: Layer To KML (2)
arcpy.LayerToKML_conversion(Fish_Net_3D_KML__2_, Output_KML_File, "0", "false", "DEFAULT", "1024", "96", "ABSOLUTE")

